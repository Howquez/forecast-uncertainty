---
title: 'Reproduce Figures'
subtitle: 'Ambiguity attitudes and surprises'
author:
- name: Aljoscha Minnich
  email: aljoscha.minnich@uni-hamburg.de
  orcid: 0000-0001-5224-0143
  corresponding: false
  affiliations:
    - name: Center for Earth System Research and Sustainability (CEN), University of Hamburg
      address: Bundesstrasse 53
      city: Hamburg
      country: Germany
      postal-code: 20146
    - name: Department of Economics, University of Hamburg
      address:  Von-Melle-Park 5
      city: Hamburg
      country: Germany
      postal-code: 20146
- name: Hauke Roggenkamp
  email: Hauke.Roggenkamp@unisg.ch
  orcid: 0009-0005-5176-4718
  corresponding: false
  affiliations:
    - name: Institute of Behavioral Science and Technology, University of St. Gallen
      address: Torstrasse 25
      city: St. Gallen
      country: Switzerland
      postal-code: 9000
    - name: Faculty of Economics & Social Sciences, Helmut-Schmidt-University
      address: Holstenhofweg 85
      city: Hamburg
      country: Germany
      postal_code: 22043
- name: Andreas Lange
  email: andreas.lange@uni-hamburg.de
  corresponding: true
  affiliations:
    - name: Center for Earth System Research and Sustainability (CEN), University of Hamburg
      address: Bundesstrasse 53
      city: Hamburg
      country: Germany
      postal-code: 20146
    - name: Department of Economics, University of Hamburg
      address:  Von-Melle-Park 5
      city: Hamburg
      country: Germany
      postal-code: 20146
date: now
date-format: long
format: 
  html:
    embed-resources: true
    theme: cosmo
    fig-height: 8
toc: true
bibliography: ../biblio.bib
---

---

This document explains how to reproduce the figures presented in the paper.

# Install Packages

We install the following packages using the `groundhog` package manager to increase computational reproducibility.

```{r install_packages}
#| output: false

if (!requireNamespace("groundhog", quietly = TRUE)) {
    install.packages("groundhog")
    library("groundhog")
}

pkgs <- c("magrittr", "data.table", "stringr", "lubridate", "knitr", "glue",
          "sandwich", "lmtest",
          "ggplot2", "ggpubr", "rstatix", "patchwork")

groundhog::groundhog.library(pkg = pkgs,
                             date = "2023-09-25")
```

# Read Data

```{r read_data}
# data <- data.table::fread(file = "../data/processed/full.csv")
data <- readRDS(file="../data/processed/full.Rda")
```

```{r factorize}
data[, communication := as.factor(communication)]
data[, communication := factor(communication, levels = c("point", "interval", "both"))]
data[, stage := as.factor(stage)]
data[, stage := factor(stage, levels = c("1", "2"))]
```

# Figure 1

To create @fig-1 (and `fig-2`), we create a wrapper function that we can call several times. As all the other figures presented in this document, @fig-1 consists of three panels, `top`, `left`, and `right` that are relatively similar. We thus, save both space and sources of error by creating a wrapper function `plot_bars()` that creates bar plots and annotates them with test statistics.



```{r bar_function}

plot_bars <- function(response = "b", surprise_sub = NA, limits = ylim(-1.02, 1.02)){
  
  if(response == "b"){
      y_1 = 0.6
      y_2 = 0.4
    } else {
      y_1 = 1.4
      y_2 = 1
    }
  
  if(!is.na(surprise_sub)){
    # Plot bottom panels
    tmp <- data[surprise == surprise_sub]
    names(tmp)[names(tmp) == response] <- 'outcome'
    
    if(surprise_sub){
      title <- "Surprising Condition"
    } else {
      title <- "Confirming Condition"
    }
    
    test_stats_1 <- tmp %>% 
      group_by(communication) %>%
      wilcox_test(formula = outcome ~ stage,
                  paired = T) %>% 
      adjust_pvalue(method = "none") %>%
      add_significance(p.col = "p.adj",
                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),
                       symbols = c( "***", "**", "*", "ns")) %>%
      as.data.table()
    
    
    test_stats_2 <- tmp %>% 
      group_by(stage) %>%
      wilcox_test(formula = outcome ~ communication) %>% 
      adjust_pvalue(method = "none") %>%
      add_significance(p.col = "p.adj",
                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),
                       symbols = c( "***", "**", "*", "ns")) %>%
      as.data.table()
    test_stats_2 <- test_stats_2[stage == 2]
    
    plot_bottom <- ggplot(data = tmp,
           mapping = aes(x = as.factor(communication),
                         y = outcome)) +
        geom_bar(aes(fill = stage),
                 position = "dodge", 
                 stat = "summary", 
                 fun = "mean") + 
      limits +
      scale_fill_manual(values=c("black", "gray")) +
      theme_classic() +
      stat_pvalue_manual(data = test_stats_2,
                         label = "{p} ({p.adj.signif})", 
                         step.group.by = "stage",
                         tip.length = 0, 
                         step.increase = 0.1, 
                         y.position = y_1) +
      stat_pvalue_manual(data = test_stats_1,
                         label = "{p} ({p.adj.signif})",
                         y.position = y_2,
                         tip.length = 0,
                         x = "communication") +
      labs(title = title,
           x = "Communication",
           y = glue("Ambiguity index {response} (Baillon)"))
    
    rm(tmp)
    
    plot_bottom
  } else {
    # Plot the top panel
    tmp <- data
    names(tmp)[names(tmp) == response] <- 'outcome'
    
    title <- "Both Conditions"
    
    test_stats_1 <- tmp %>% 
      group_by(surprise) %>%
      wilcox_test(formula = outcome ~ stage,
                  paired = T) %>% 
      adjust_pvalue(method = "none") %>%
      add_significance(p.col = "p.adj",
                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),
                       symbols = c( "***", "**", "*", "ns")) %>%
      as.data.table()
    
    
    test_stats_2 <- tmp %>% 
      group_by(stage) %>%
      wilcox_test(formula = outcome ~ surprise) %>% 
      adjust_pvalue(method = "none") %>%
      add_significance(p.col = "p.adj",
                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),
                       symbols = c( "***", "**", "*", "ns")) %>%
      as.data.table()
    test_stats_2 <- test_stats_2[stage == 2]
    
    
    plot_top <- ggplot(data = tmp,
           mapping = aes(x = as.factor(surprise),
                         y = outcome)) +
        geom_bar(aes(fill = stage),
                 position = "dodge", 
                 stat = "summary", 
                 fun = "mean") + 
      limits +
      scale_fill_manual(values=c("black", "gray")) +
      theme_classic() +
      stat_pvalue_manual(data = test_stats_2,
                         label = "{p} ({p.adj.signif})", 
                         step.group.by = "stage",
                         tip.length = 0, 
                         step.increase = 0.1, 
                         y.position = y_1) +
      stat_pvalue_manual(data = test_stats_1,
                         label = "{p} ({p.adj.signif})",
                         y.position = y_2,
                         tip.length = 0,
                         x = "surprise") +
      labs(title = title,
           x = " Surprising Condition",
           y = glue("Ambiguity index {response} (Baillon)"))
    
    rm(tmp)
    
    plot_top
  }
}

```

```{r fig_1}
#| label: fig-1
#| fig-cap: 'Means of ambiguity index b separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant'

top   <- plot_bars(response = "b", surprise_sub = NA)
left  <- plot_bars(response = "b", surprise_sub = FALSE)
right <- plot_bars(response = "b", surprise_sub = TRUE)

(top / (left | right) & theme(legend.position = "bottom")) + plot_layout(guides = "collect")
```

# Figure 2

Next, we use the wrapper function again but visualize another outcome using the `response == a` argument.

```{r fig_2}
#| warning: false
#| label: fig-2
#| fig-cap: 'Means of ambiguity index a separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant'

top   <- plot_bars(response = "a", limits = ylim(-2.01, 4.01), surprise_sub = NA)
left  <- plot_bars(response = "a", limits = ylim(-2.01, 4.01), surprise_sub = FALSE)
right <- plot_bars(response = "a", limits = ylim(-2.01, 4.01), surprise_sub = TRUE)

(top / (left | right) & theme(legend.position = "bottom")) + plot_layout(guides = "collect")
```

# Figure 3

@fig-3 also presents three panels. In contrast to @fig-1 and @fig-2, these panels visualize confidence intervals of our estimator of interest: the interaction of `stage` and `surprise` (top panel) as well as the interaction between `stage` and `communication` in the lower two panels.

The corresponding data stems from many OLS regressions and are computed in for-loops. Even though the code differs slightly, it is very repetitive between the three panels, which is why we only explain the top panel

## Top Panel

Before calculating the data based on OLS regressions, we specify three different models: `none` represents only treatment variables, `demographics` extends the former by adding demographic variables, and `all` extends the former two by also adding all remaining covariates.

```{r covariates_top}
none <- c("surprise", "treated", "surprise*treated")

demographics <- c(none, "age_35_52","age_53_plus","female", "high_education", "high_income", "married", "parentship")

all <- c(demographics, "high_temperature","high_usage","high_general_risk","high_weather_risk","high_accuracy","high_credibility")
```


Next, we run a nested loop that iterates through all three models and within these models through both ambiguity indices `a` and `b`. From these ols regressions, we compute clustered standard errors using the `{{sandwich}}` and `{{lmtest}}` package. The resuling data is stored in a temporary data.table that is appended to an initially empty data.table called `ci_top`.

```{r data_top}
ci_top <- data.table()
for(RHS in c("none", "demographics", "all")){
  for(LHS in c("a", "b")){
    ols <- lm(formula = reformulate(termlabels = get(RHS), 
                                    response = LHS),
              data = data)
    
    tmp <- coefci(x = ols,
                  parm = "surpriseTRUE:treatedTRUE",
                  vcov = vcovCL(x = ols, 
                                cluster = data$participant.label, 
                                type = "HC1"),
                  level = 0.95) %>% 
      data.table(model = RHS, outcome = LHS)
    tmp[, center := (`2.5 %` + `97.5 %`)/2]
    
    ci_top <- rbind(ci_top, tmp)
  }
}
```

The result looks as follows. The data.table provides a column for the 2.5% and 97.5% confidence interval, the center of the two, as well as the ols specification as presented in `model` and `outcome`.

```{r}
ci_top %>% head(n = 7) %>% kable()
```

Finally, we plot this data set (`ci_top`) using the `{{ggplot2}}` package. The resulting object is stored as `top` and will be assembled together with the other two panels.

```{r viz_top}
top <- ggplot(data = ci_top,
       mapping = aes(y = outcome)) +
  geom_pointrange(mapping = aes(x = center,
                                y = outcome,
                                xmin = `2.5 %`,
                                xmax = `97.5 %`,
                                shape = factor(model)),
                  data = ci_top,
                  position = position_dodge(width = 0.4),
                  fatten=5,
                  alpha=.8) +
  geom_vline(xintercept = 0, 
             color = "red", 
             alpha = 0.66, 
             show.legend = FALSE) +
  theme_bw() +
  labs(#title = "(a) Effect of contradiction (relative to confirmation)",
       y = "Ambiguity Index", 
       x = "Estimate",
       shape="Control variables")
```


## Left Panel

```{r covariates_left}
none <- c("communication", "treated", "communication*treated")

demographics <- c(none, "age_35_52","age_53_plus","female", "high_education", "high_income", "married", "parentship")

all <- c(demographics, "high_temperature","high_usage","high_general_risk","high_weather_risk","high_accuracy","high_credibility")
```

```{r data_left}
ci_left <- data.table()
for(RHS in c("none", "demographics", "all")){
  for(LHS in c("a", "b")){
    ols <- lm(formula = reformulate(termlabels = get(RHS), 
                                    response = LHS),
              data = data,
              subset = (surprise == FALSE))
    for(communication in c("interval", "both")){
      tmp <- coefci(x = ols,
                    parm = paste0("communication", communication, ":treatedTRUE"),
                    vcov = vcovCL(x = ols, 
                                  cluster = data[surprise == FALSE,
                                                 participant.label], 
                                  type = "HC1"),
                    level = 0.95) %>% 
        data.table(model = RHS, outcome = paste0(LHS, " (", communication, ")"))
      tmp[, center := (`2.5 %` + `97.5 %`)/2]
      
      ci_left <- rbind(ci_left, tmp)
    }
  }
}
```

```{r}
ci_left %>% head(n = 7) %>% kable()
```

```{r viz_left}
left <- ggplot(data = ci_left,
       mapping = aes(y = outcome)) +
  geom_pointrange(mapping = aes(x = center,
                                y = outcome,
                                xmin = `2.5 %`,
                                xmax = `97.5 %`,
                                shape = factor(model)),
                  data = ci_left,
                  position = position_dodge(width = 0.4),
                  fatten=5,
                  alpha=.8) +
  geom_vline(xintercept = 0, 
             color = "red", 
             alpha = 0.66, 
             show.legend = FALSE) +
  theme_bw() +
  labs(#title = "(b) Effect of information treatments (both, interval) relative to best guess, confirmation treatments",
       y = "Ambiguity Index", 
       x = "Estimate",
       shape="Control variables")
```

## Right Panel

```{r data_right}
ci_right <- data.table()
for(RHS in c("none", "demographics", "all")){
  for(LHS in c("a", "b")){
    ols <- lm(formula = reformulate(termlabels = get(RHS), 
                                    response = LHS),
              data = data,
              subset = (surprise == TRUE))
    for(communication in c("interval", "both")){
      tmp <- coefci(x = ols,
                    parm = paste0("communication", communication, ":treatedTRUE"),
                    vcov = vcovCL(x = ols, 
                                  cluster = data[surprise == TRUE,
                                                 participant.label], 
                                  type = "HC1"),
                    level = 0.95) %>% 
        data.table(model = RHS, outcome = paste0(LHS, " (", communication, ")"))
      tmp[, center := (`2.5 %` + `97.5 %`)/2]
      
      ci_right <- rbind(ci_right, tmp)
    }
  }
}
```

```{r}
ci_right %>% head(n = 7) %>% kable()
```

```{r viz_right}
right <- ggplot(data = ci_right,
       mapping = aes(y = outcome)) +
  geom_pointrange(mapping = aes(x = center,
                                y = outcome,
                                xmin = `2.5 %`,
                                xmax = `97.5 %`,
                                shape = factor(model)),
                  data = ci_right,
                  position = position_dodge(width = 0.4),
                  fatten=5,
                  alpha=.8) +
  geom_vline(xintercept = 0, 
             color = "red", 
             alpha = 0.66, 
             show.legend = FALSE) +
  theme_bw() +
  labs(#title = "(c) Effect of information treatments (both, interval) relative to best guess, contradiction treatments",
       y = "Ambiguity Index", 
       x = "Estimate",
       shape="Control variables") +
  scale_y_discrete(position = "right")
```

## Assemble Top, Left and Right Panels


As before, we use the `{{patchwork}}` package to assmble the plot objects.

```{r fig_3}
#| label: fig-3
#| fig-cap: 'Treatment effects of regression equation (1) with dependent variables b and a. Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020).'
(top / (left | right) & theme(legend.position = "bottom")) + plot_layout(guides = "collect")
```



# Figure 4

The process of producing @fig-4 is very similar to the process of @fig-3. The only difference is that we do not loop through the outcomes `a` and `b` but the events' matching probabilities (`E1`, `E2`, `...`, `E23`).

To loop through these variables, we use a regex (`E\\d`) to create a vector called `events`.

```{r event_cols}
events <- names(data) %>% str_subset(pattern = "E\\d")
```


Because the process is, from now on, so similar to the process of @fig-3, we do not comment it any further here.


## Top Panel

```{r covariates_top_4}
none <- c("surprise", "treated", "surprise*treated")

demographics <- c(none, "age_35_52","age_53_plus","female", "high_education", "high_income", "married", "parentship")

all <- c(demographics, "high_temperature","high_usage","high_general_risk","high_weather_risk","high_accuracy","high_credibility")
```

```{r data_top_4}
ci_top <- data.table()
for(RHS in c("none", "demographics", "all")){
  for(LHS in events){
    ols <- lm(formula = reformulate(termlabels = get(RHS), 
                                    response = LHS),
              data = data)
    
    tmp <- coefci(x = ols,
                  parm = "surpriseTRUE:treatedTRUE",
                  vcov = vcovCL(x = ols, 
                                cluster = data$participant.label, 
                                type = "HC1"),
                  level = 0.95) %>% data.table(model = RHS, outcome = LHS)
    tmp[, center := (`2.5 %` + `97.5 %`)/2]
    
    ci_top <- rbind(ci_top, tmp)
  }
}
```

```{r}
ci_top %>% head(n = 7) %>% kable()
```

```{r viz_top_4}
top <- ggplot(data = ci_top,
       mapping = aes(y = outcome)) +
  geom_pointrange(mapping = aes(x = center,
                                y = outcome,
                                xmin = `2.5 %`,
                                xmax = `97.5 %`,
                                shape = factor(model)),
                  data = ci_top,
                  position = position_dodge(width = 0.4),
                  fatten=5,
                  alpha=.8) +
  geom_vline(xintercept = 0, 
             color = "red", 
             alpha = 0.66, 
             show.legend = FALSE) +
  theme_bw() +
  labs(y = "Ambiguity Index", 
       x = "Estimate",
       shape="Control variables")
```

## Left Panel

```{r covariates_left_4}
none <- c("communication", "treated", "communication*treated")

demographics <- c(none, "age_35_52","age_53_plus","female", "high_education", "high_income", "married", "parentship")

all <- c(demographics, "high_temperature","high_usage","high_general_risk","high_weather_risk","high_accuracy","high_credibility")
```

```{r data_left_4}
ci_left <- data.table()
for(RHS in c("none", "demographics", "all")){
  for(LHS in events){
    ols <- lm(formula = reformulate(termlabels = get(RHS), 
                                    response = LHS),
              data = data,
              subset = (surprise == FALSE))
    for(communication in c("interval", "both")){
      tmp <- coefci(x = ols,
                    parm = paste0("communication", communication, ":treatedTRUE"),
                    vcov = vcovCL(x = ols, 
                                  cluster = data[surprise == FALSE,
                                                 participant.label], 
                                  type = "HC1"),
                    level = 0.95) %>% 
        data.table(model = RHS, outcome = paste0(LHS, " (", communication, ")"))
      tmp[, center := (`2.5 %` + `97.5 %`)/2]
      
      ci_left <- rbind(ci_left, tmp)
    }
  }
}
```

```{r}
ci_left %>% head(n = 7) %>% kable()
```

```{r viz_left_4}
left <- ggplot(data = ci_left,
       mapping = aes(y = outcome)) +
  geom_pointrange(mapping = aes(x = center,
                                y = outcome,
                                xmin = `2.5 %`,
                                xmax = `97.5 %`,
                                shape = factor(model)),
                  data = ci_left,
                  position = position_dodge(width = 0.4),
                  fatten=5,
                  alpha=.8) +
  geom_vline(xintercept = 0, 
             color = "red", 
             alpha = 0.66, 
             show.legend = FALSE) +
  theme_bw() +
  labs(y = "Ambiguity Index", 
       x = "Estimate",
       shape="Control variables")
```


## Right Panel

```{r data_right_4}
ci_right <- data.table()
for(RHS in c("none", "demographics", "all")){
  for(LHS in events){
    ols <- lm(formula = reformulate(termlabels = get(RHS), 
                                    response = LHS),
              data = data,
              subset = (surprise == TRUE))
    for(communication in c("interval", "both")){
      tmp <- coefci(x = ols,
                    parm = paste0("communication", communication, ":treatedTRUE"),
                    vcov = vcovCL(x = ols, 
                                  cluster = data[surprise == TRUE,
                                                 participant.label], 
                                  type = "HC1"),
                    level = 0.95) %>% 
        data.table(model = RHS, outcome = paste0(LHS, " (", communication, ")"))
      tmp[, center := (`2.5 %` + `97.5 %`)/2]
      
      ci_right <- rbind(ci_right, tmp)
    }
  }
}
```

```{r}
ci_right %>% head(n = 7) %>% kable()
```

```{r viz_right_4}
right <- ggplot(data = ci_right,
       mapping = aes(y = outcome)) +
  geom_pointrange(mapping = aes(x = center,
                                y = outcome,
                                xmin = `2.5 %`,
                                xmax = `97.5 %`,
                                shape = factor(model)),
                  data = ci_right,
                  position = position_dodge(width = 0.4),
                  fatten=5,
                  alpha=.8) +
  geom_vline(xintercept = 0, 
             color = "red", 
             alpha = 0.66, 
             show.legend = FALSE) +
  theme_bw() +
  labs(y = "Ambiguity Index", 
       x = "Estimate",
       shape="Control variables") +
  scale_y_discrete(position = "right")
```


## Assemble Top, Left and Right Panels

```{r fig_4}
#| label: fig-4
#| fig-cap: 'Treatment effects of regression equation (1) with matching probabilities for all events as depen- dent variables. Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020).'

(top / (left | right) & theme(legend.position = "bottom")) + plot_layout(guides = "collect")
```

